interface Field {
    name: string;
    required?: boolean;
    minlength?: number;
    maxlength?: number;
    lt?: number;
    gt?: number;
    regex?: RegExp;
    type?: FieldType;
    stringType?: StringType,
    value?: Field[];
}

declare enum FieldType {
    String, Number, List, Object, Float
}

declare enum StringType {
    Alpha, Numeric, AlphaNumeric, Date, Email
}


declare class DataValidator {
    public ValidationResult: Object;
    public CleanData: Object;

    constructor(ValidationSchema: Array<Field>, Data: Object);
    public Validate(): void;
    public Sanitize(): void;
    public GetValue<T>(field: string, defaultData: T): T;
}

export { Field, FieldType, StringType, DataValidator };